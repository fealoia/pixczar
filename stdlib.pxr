Int WIDTH = 800;
Int HEIGHT = 800;

Void fillFrames(Frame[] frames, Placement placement, Int start, Int end) {
  Int i;
  for(i = start; i < end; i++) {
      if(i < length(frames)) {
        frames[i].addPlacement(placement);
      }
  }
}

Void keyFrame(Frame[] frames, Int start, Pix obj, Int[] from, Int[] to, Int duration) {
    Int xTimeStep = (to[0]-from[0])/duration;
    Int yTimeStep = (to[1]-from[1])/duration;

    Int i;
    for(i = 0; i < duration; i++) {
        Placement plcmt = new Placement(obj, from[0] + i*xTimeStep,
                from[1] + i*yTimeStep);
        if(i+start < length(frames)) {
            frames[i+start].addPlacement(plcmt);
        }
    }
}

Int accelerationDistance(Int t, Int a) {
  Int half = a/2;
  return half * t * t;
}

Int[] projectile(Frame[] frames, Int start, Pix obj, Int xSpeed, Int width, 
        Int height, Int endHeight, Int gravity) {
    //g in pixel/frame^2
    Int d = accelerationDistance(1, gravity);

   Int i;
   for(i=0; (height > endHeight && gravity > 0) || (height < endHeight && gravity < 0); i++) {
      height = height - d;

      if(i < length(frames)) {
        frames[i+start].addPlacement(new Placement(obj, width + i*xSpeed, height));
      } else {
        break;
      }
   }
   
   return [i+start, width + (i-1)*xSpeed];
}
